#!/usr/bin/env Rscript
#Script 2. R script for QC of mapped data

library(Seurat)
library(ggplot2)
library(dplyr)
library(scales)
library(gridExtra)
library(MAST)
library(ips)
library(ddqcR)
library(SoupX)

#path to output of QC
path_to_output_of_qc <- 'XXX'

#Load the genome annotation (gtf gile)
gtf <- rtracklayer::import('XXX') #path to gtf file

#Extract mt genes
mt_gtf <- gtf[gtf@seqnames == "NC_013663.1" & mcols(gtf)$type == "gene"]

#Create data frame with mt IDs and Names
mt_df <- data.frame(IDs = mcols(mt_gtf)$gene_id, names =  mcols(mt_gtf)$gene)

#Loop through all samples
list_of_samples<-readLines('XXX') #path to the list of samples
for (i in list_of_samples){
  cellranger_path = 'XXX' #path to outs folder created by cellranger for each sample

  #SoupX
  sc = load10X(cellranger_path)
  sc = autoEstCont(sc)
  data = adjustCounts(sc)

  #Post SoupX QC
  #Remove cells with low ratio gene/UMI
  gct = data.frame(cell = colnames(data), genes = (0))

  #Add the gene counts per cell (number of genes with more than 0 umis)
  for (i in 1:dim(data)[2] ){
    gct [i,2] = length(which(data[,i] > 0))
  }

  #Add Column for UMI counts
  gct = cbind(gct, UMIs=(Matrix::colSums(data)))
  data = data[,which(gct$genes>gct$UMIs^0.78)]
  gct = gct[gct$cell %in% colnames(data),]

  #Remove genes with low UMI counts and high mitochondrial fraction, using ddqc
  #Create Seurat object
  data = CreateSeuratObject(counts = data, project = my.samplename, min.cells = 2)

  #Remove cells with very few genes
  data = initialQC(data)

  #Calculate percentage of mitochondrial reads
  data[["percent.mt"]] = PercentageFeatureSet(data, features = mt_df$IDs)

  #Remove reads with very high mitochondrial fraction (above 60%)
  data = subset(data,percent.mt < 60)

  #Run biology-centered data-driven quality control, ddqc
  df.qc<-ddqc.metrics(data)

  #Filter data based on this
  data <- filterData(data, df.qc)

  #Save data
  saveRDS(data, file= paste0(path_to_output_of_qc,i,'_filteredUMIs_strict.rds'))
}



